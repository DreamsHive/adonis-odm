name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npx prettier --check .

      - name: TypeScript type check
        run: npm run typecheck

  test:
    name: Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18', '20', '21']

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for MongoDB
        run: |
          until mongosh --eval "print('MongoDB is ready')" > /dev/null 2>&1; do
            echo "Waiting for MongoDB..."
            sleep 2
          done

      - name: Run unit tests
        run: npm run test
        env:
          MONGO_URI: mongodb://localhost:27017/test_db

      - name: Run integration tests
        run: npm run test:integration
        env:
          MONGO_URI: mongodb://localhost:27017/test_integration_db

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run compile

      - name: Validate package contents
        run: |
          # Check if essential files exist in build
          test -f build/src/index.js || (echo "Missing build/src/index.js" && exit 1)
          test -f build/src/index.d.ts || (echo "Missing build/src/index.d.ts" && exit 1)
          test -f build/providers/index.js || (echo "Missing build/providers/index.js" && exit 1)
          test -f build/configure.js || (echo "Missing build/configure.js" && exit 1)
          echo "‚úÖ All essential build files present"

      - name: Test package installation
        run: |
          # Pack the package and test installation
          npm pack
          PACKAGE_FILE=$(ls *.tgz)
          echo "Testing package: $PACKAGE_FILE"

          # Create test directory and install package
          mkdir test-install
          cd test-install
          npm init -y
          npm install ../$PACKAGE_FILE

          # Test basic import
          node -e "
            try {
              const { BaseModel } = require('adonis-odm');
              console.log('‚úÖ Package imports successfully');
              console.log('BaseModel:', typeof BaseModel);
            } catch (error) {
              console.error('‚ùå Package import failed:', error.message);
              process.exit(1);
            }
          "

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/
            *.tgz
          retention-days: 7

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Check for known vulnerabilities
        run: npx audit-ci --moderate

  validate-gitignore:
    name: Validate .gitignore
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Validate .gitignore patterns
        run: node scripts/validate-gitignore.js

  package-health:
    name: Package Health Check
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Check package size
        run: |
          PACKAGE_FILE=$(ls *.tgz)
          PACKAGE_SIZE=$(stat -c%s "$PACKAGE_FILE")
          PACKAGE_SIZE_MB=$((PACKAGE_SIZE / 1024 / 1024))

          echo "üì¶ Package size: ${PACKAGE_SIZE_MB}MB"

          # Warn if package is larger than 10MB
          if [ $PACKAGE_SIZE_MB -gt 10 ]; then
            echo "‚ö†Ô∏è Warning: Package size is larger than 10MB"
          else
            echo "‚úÖ Package size is acceptable"
          fi

      - name: Analyze bundle
        run: |
          # Check what's included in the package
          tar -tzf *.tgz | head -20
          echo "..."
          echo "Total files in package: $(tar -tzf *.tgz | wc -l)"

  compatibility:
    name: AdonisJS Compatibility Test
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        adonisjs-version: ['6.12.0', '6.18.0']

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Test with AdonisJS ${{ matrix.adonisjs-version }}
        run: |
          # Create a test AdonisJS project
          mkdir adonisjs-test
          cd adonisjs-test

          # Initialize AdonisJS project
          npm init -y
          npm install @adonisjs/core@${{ matrix.adonisjs-version }}

          # Install our package
          PACKAGE_FILE=$(ls ../*.tgz)
          npm install "$PACKAGE_FILE"

          # Test basic integration
          node -e "
            try {
              const { BaseModel, column } = require('adonis-odm');
              console.log('‚úÖ Package works with AdonisJS ${{ matrix.adonisjs-version }}');
            } catch (error) {
              console.error('‚ùå Compatibility test failed:', error.message);
              process.exit(1);
            }
          "
